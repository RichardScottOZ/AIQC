{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Visualization & Metrics"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Prerequisites"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "`Plotly` is used for all charts to provide an interactive experience: hover, toggle, and zoom. Reference the [Installation](installation.html#Plotting) notebook for information about configuring Plotly. However, static images are used in this notebook due to recent difficulty with 3rd party JS on the documentation portal."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Overview"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As described in the [Low-Level Docs](api_low_level.html#10.-Assess-the-Results.), the `Predictor` and `Prediction` of each training `Job` are automatically populated with metrics for each split/ fold of samples evaluated against the model. The `Algorithm.analysis_type` determines which metrics and plots are prepared:\n",
    "\n",
    "* Although `'classification_multi'` and `'classification_binary'` share the same metrics and plots, they go about producing these artifacts differently. For example, ROC curves `roc_multi_class=None` vs `roc_multi_class='ovr'`.\n",
    "\n",
    "* `'regression'`, unlike the classification analyses, does not have an 'accuracy' metric, so we substitute 'r2', R^2 (coefficient of determination, for it. There are no regression-specific plots."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We'll use the `datum` and `tests` modules to rapidly create some examples."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import aiqc\n",
    "from aiqc import datum\n",
    "from aiqc import tests"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Classification"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Below we're just quickly generating some trained models to work with."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "ðŸ”® Training Models ðŸ”®: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 8/8 [00:28<00:00,  3.54s/it]\n"
     ]
    }
   ],
   "source": [
    "%%capture\n",
    "queue_multiclass = tests.make_test_queue('keras_multiclass')\n",
    "queue_multiclass.run_jobs()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Individual Job Metrics"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Each training `Prediction` contains the following metrics by split/fold:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pprint import pprint as p"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'test': {'accuracy': 0.9629629629629629,\n",
      "          'f1': 0.9628482972136223,\n",
      "          'loss': 0.17958050966262817,\n",
      "          'precision': 0.9666666666666667,\n",
      "          'recall': 0.9629629629629629,\n",
      "          'roc_auc': 0.9876543209876543},\n",
      " 'train': {'accuracy': 0.9705882352941176,\n",
      "           'f1': 0.9705308775731311,\n",
      "           'loss': 0.13190817832946777,\n",
      "           'precision': 0.9729729729729729,\n",
      "           'recall': 0.9705882352941176,\n",
      "           'roc_auc': 0.9985582468281432},\n",
      " 'validation': {'accuracy': 1.0,\n",
      "                'f1': 1.0,\n",
      "                'loss': 0.15124531090259552,\n",
      "                'precision': 1.0,\n",
      "                'recall': 1.0,\n",
      "                'roc_auc': 1.0}}\n"
     ]
    }
   ],
   "source": [
    "p(queue_multiclass.jobs[0].predictors[0].predictions[0].metrics)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It also contains per-epoch `History` metrics calculated during model training."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "queue_multiclass.jobs[0].predictors[0].history.keys()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Queue Metrics"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* `selected_metrics:list` - If you get overwhelmed by the variety of metrics returned, then you can include the ones you want selectively by name.\n",
    "* `sort_by:str` - You can sort the dataframe by any column name.\n",
    "* `ascending:bool=False` - Descending if False."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hyperparamcombo_id</th>\n",
       "      <th>job_id</th>\n",
       "      <th>predictor_id</th>\n",
       "      <th>split</th>\n",
       "      <th>accuracy</th>\n",
       "      <th>f1</th>\n",
       "      <th>loss</th>\n",
       "      <th>precision</th>\n",
       "      <th>recall</th>\n",
       "      <th>roc_auc</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>train</td>\n",
       "      <td>0.970588</td>\n",
       "      <td>0.970531</td>\n",
       "      <td>0.094776</td>\n",
       "      <td>0.972973</td>\n",
       "      <td>0.970588</td>\n",
       "      <td>0.999135</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>validation</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.059430</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>test</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>0.885714</td>\n",
       "      <td>0.158564</td>\n",
       "      <td>0.916667</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>train</td>\n",
       "      <td>0.941176</td>\n",
       "      <td>0.940715</td>\n",
       "      <td>0.140597</td>\n",
       "      <td>0.950000</td>\n",
       "      <td>0.941176</td>\n",
       "      <td>0.998414</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>validation</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.090078</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>test</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>0.885714</td>\n",
       "      <td>0.301731</td>\n",
       "      <td>0.916667</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>train</td>\n",
       "      <td>0.960784</td>\n",
       "      <td>0.960648</td>\n",
       "      <td>0.100677</td>\n",
       "      <td>0.964912</td>\n",
       "      <td>0.960784</td>\n",
       "      <td>0.999135</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>validation</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.101051</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>test</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>0.885714</td>\n",
       "      <td>0.205332</td>\n",
       "      <td>0.916667</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>0.995885</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>validation</td>\n",
       "      <td>0.904762</td>\n",
       "      <td>0.902778</td>\n",
       "      <td>0.190586</td>\n",
       "      <td>0.925926</td>\n",
       "      <td>0.904762</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>train</td>\n",
       "      <td>0.911765</td>\n",
       "      <td>0.910192</td>\n",
       "      <td>0.211756</td>\n",
       "      <td>0.930233</td>\n",
       "      <td>0.911765</td>\n",
       "      <td>0.992647</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>test</td>\n",
       "      <td>0.851852</td>\n",
       "      <td>0.844156</td>\n",
       "      <td>0.253303</td>\n",
       "      <td>0.897436</td>\n",
       "      <td>0.851852</td>\n",
       "      <td>0.995885</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>train</td>\n",
       "      <td>0.980392</td>\n",
       "      <td>0.980375</td>\n",
       "      <td>0.075605</td>\n",
       "      <td>0.981481</td>\n",
       "      <td>0.980392</td>\n",
       "      <td>0.998847</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>validation</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.037085</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>test</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>0.885714</td>\n",
       "      <td>0.113647</td>\n",
       "      <td>0.916667</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>train</td>\n",
       "      <td>0.941176</td>\n",
       "      <td>0.940715</td>\n",
       "      <td>0.152959</td>\n",
       "      <td>0.950000</td>\n",
       "      <td>0.941176</td>\n",
       "      <td>0.998847</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>validation</td>\n",
       "      <td>0.904762</td>\n",
       "      <td>0.902778</td>\n",
       "      <td>0.176098</td>\n",
       "      <td>0.925926</td>\n",
       "      <td>0.904762</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>test</td>\n",
       "      <td>0.925926</td>\n",
       "      <td>0.925000</td>\n",
       "      <td>0.244709</td>\n",
       "      <td>0.939394</td>\n",
       "      <td>0.925926</td>\n",
       "      <td>0.981481</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>train</td>\n",
       "      <td>0.950980</td>\n",
       "      <td>0.950714</td>\n",
       "      <td>0.114393</td>\n",
       "      <td>0.957265</td>\n",
       "      <td>0.950980</td>\n",
       "      <td>0.998558</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>validation</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.080222</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>test</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>0.885714</td>\n",
       "      <td>0.186216</td>\n",
       "      <td>0.916667</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>validation</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.151245</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>train</td>\n",
       "      <td>0.970588</td>\n",
       "      <td>0.970531</td>\n",
       "      <td>0.131908</td>\n",
       "      <td>0.972973</td>\n",
       "      <td>0.970588</td>\n",
       "      <td>0.998558</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>test</td>\n",
       "      <td>0.962963</td>\n",
       "      <td>0.962848</td>\n",
       "      <td>0.179581</td>\n",
       "      <td>0.966667</td>\n",
       "      <td>0.962963</td>\n",
       "      <td>0.987654</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    hyperparamcombo_id  job_id  predictor_id       split  accuracy        f1  \\\n",
       "23                   8       8             8       train  0.970588  0.970531   \n",
       "22                   8       8             8  validation  1.000000  1.000000   \n",
       "21                   8       8             8        test  0.888889  0.885714   \n",
       "20                   7       7             7       train  0.941176  0.940715   \n",
       "19                   7       7             7  validation  1.000000  1.000000   \n",
       "18                   7       7             7        test  0.888889  0.885714   \n",
       "17                   6       6             6       train  0.960784  0.960648   \n",
       "16                   6       6             6  validation  1.000000  1.000000   \n",
       "15                   6       6             6        test  0.888889  0.885714   \n",
       "13                   5       5             5  validation  0.904762  0.902778   \n",
       "14                   5       5             5       train  0.911765  0.910192   \n",
       "12                   5       5             5        test  0.851852  0.844156   \n",
       "11                   4       4             4       train  0.980392  0.980375   \n",
       "10                   4       4             4  validation  1.000000  1.000000   \n",
       "9                    4       4             4        test  0.888889  0.885714   \n",
       "8                    3       3             3       train  0.941176  0.940715   \n",
       "7                    3       3             3  validation  0.904762  0.902778   \n",
       "6                    3       3             3        test  0.925926  0.925000   \n",
       "5                    2       2             2       train  0.950980  0.950714   \n",
       "4                    2       2             2  validation  1.000000  1.000000   \n",
       "3                    2       2             2        test  0.888889  0.885714   \n",
       "1                    1       1             1  validation  1.000000  1.000000   \n",
       "2                    1       1             1       train  0.970588  0.970531   \n",
       "0                    1       1             1        test  0.962963  0.962848   \n",
       "\n",
       "        loss  precision    recall   roc_auc  \n",
       "23  0.094776   0.972973  0.970588  0.999135  \n",
       "22  0.059430   1.000000  1.000000  1.000000  \n",
       "21  0.158564   0.916667  0.888889  1.000000  \n",
       "20  0.140597   0.950000  0.941176  0.998414  \n",
       "19  0.090078   1.000000  1.000000  1.000000  \n",
       "18  0.301731   0.916667  0.888889  1.000000  \n",
       "17  0.100677   0.964912  0.960784  0.999135  \n",
       "16  0.101051   1.000000  1.000000  1.000000  \n",
       "15  0.205332   0.916667  0.888889  0.995885  \n",
       "13  0.190586   0.925926  0.904762  1.000000  \n",
       "14  0.211756   0.930233  0.911765  0.992647  \n",
       "12  0.253303   0.897436  0.851852  0.995885  \n",
       "11  0.075605   0.981481  0.980392  0.998847  \n",
       "10  0.037085   1.000000  1.000000  1.000000  \n",
       "9   0.113647   0.916667  0.888889  1.000000  \n",
       "8   0.152959   0.950000  0.941176  0.998847  \n",
       "7   0.176098   0.925926  0.904762  1.000000  \n",
       "6   0.244709   0.939394  0.925926  0.981481  \n",
       "5   0.114393   0.957265  0.950980  0.998558  \n",
       "4   0.080222   1.000000  1.000000  1.000000  \n",
       "3   0.186216   0.916667  0.888889  1.000000  \n",
       "1   0.151245   1.000000  1.000000  1.000000  \n",
       "2   0.131908   0.972973  0.970588  0.998558  \n",
       "0   0.179581   0.966667  0.962963  0.987654  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "queue_multiclass.metrics_to_pandas(\n",
    "    selected_metrics=None\n",
    "    , sort_by=None\n",
    "\t, ascending=False\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "These are also aggregated by metric across all splits/folds."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hyperparamcombo_id</th>\n",
       "      <th>job_id</th>\n",
       "      <th>predictor_id</th>\n",
       "      <th>metric</th>\n",
       "      <th>maximum</th>\n",
       "      <th>minimum</th>\n",
       "      <th>pstdev</th>\n",
       "      <th>median</th>\n",
       "      <th>mean</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>accuracy</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.962963</td>\n",
       "      <td>0.015969</td>\n",
       "      <td>0.970588</td>\n",
       "      <td>0.977850</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>f1</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.962848</td>\n",
       "      <td>0.016013</td>\n",
       "      <td>0.970531</td>\n",
       "      <td>0.977793</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>loss</td>\n",
       "      <td>0.179581</td>\n",
       "      <td>0.131908</td>\n",
       "      <td>0.019577</td>\n",
       "      <td>0.151245</td>\n",
       "      <td>0.154245</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>precision</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.966667</td>\n",
       "      <td>0.014458</td>\n",
       "      <td>0.972973</td>\n",
       "      <td>0.979880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>recall</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.962963</td>\n",
       "      <td>0.015969</td>\n",
       "      <td>0.970588</td>\n",
       "      <td>0.977850</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>roc_auc</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.987654</td>\n",
       "      <td>0.005512</td>\n",
       "      <td>0.998558</td>\n",
       "      <td>0.995404</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>accuracy</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>0.045465</td>\n",
       "      <td>0.950980</td>\n",
       "      <td>0.946623</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>f1</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.885714</td>\n",
       "      <td>0.046804</td>\n",
       "      <td>0.950714</td>\n",
       "      <td>0.945476</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>loss</td>\n",
       "      <td>0.186216</td>\n",
       "      <td>0.080222</td>\n",
       "      <td>0.044172</td>\n",
       "      <td>0.114393</td>\n",
       "      <td>0.126944</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>precision</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.916667</td>\n",
       "      <td>0.034024</td>\n",
       "      <td>0.957265</td>\n",
       "      <td>0.957977</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>recall</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>0.045465</td>\n",
       "      <td>0.950980</td>\n",
       "      <td>0.946623</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>roc_auc</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998558</td>\n",
       "      <td>0.000680</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.999519</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>accuracy</td>\n",
       "      <td>0.941176</td>\n",
       "      <td>0.904762</td>\n",
       "      <td>0.014931</td>\n",
       "      <td>0.925926</td>\n",
       "      <td>0.923955</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>f1</td>\n",
       "      <td>0.940715</td>\n",
       "      <td>0.902778</td>\n",
       "      <td>0.015564</td>\n",
       "      <td>0.925000</td>\n",
       "      <td>0.922831</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>loss</td>\n",
       "      <td>0.244709</td>\n",
       "      <td>0.152959</td>\n",
       "      <td>0.038960</td>\n",
       "      <td>0.176098</td>\n",
       "      <td>0.191255</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>precision</td>\n",
       "      <td>0.950000</td>\n",
       "      <td>0.925926</td>\n",
       "      <td>0.009851</td>\n",
       "      <td>0.939394</td>\n",
       "      <td>0.938440</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>recall</td>\n",
       "      <td>0.941176</td>\n",
       "      <td>0.904762</td>\n",
       "      <td>0.014931</td>\n",
       "      <td>0.925926</td>\n",
       "      <td>0.923955</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>roc_auc</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.981481</td>\n",
       "      <td>0.008471</td>\n",
       "      <td>0.998847</td>\n",
       "      <td>0.993443</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>accuracy</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>0.048423</td>\n",
       "      <td>0.980392</td>\n",
       "      <td>0.956427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>f1</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.885714</td>\n",
       "      <td>0.049897</td>\n",
       "      <td>0.980375</td>\n",
       "      <td>0.955363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>loss</td>\n",
       "      <td>0.113647</td>\n",
       "      <td>0.037085</td>\n",
       "      <td>0.031256</td>\n",
       "      <td>0.075605</td>\n",
       "      <td>0.075446</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>precision</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.916667</td>\n",
       "      <td>0.035728</td>\n",
       "      <td>0.981481</td>\n",
       "      <td>0.966049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>recall</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>0.048423</td>\n",
       "      <td>0.980392</td>\n",
       "      <td>0.956427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>roc_auc</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998847</td>\n",
       "      <td>0.000544</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.999616</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>accuracy</td>\n",
       "      <td>0.911765</td>\n",
       "      <td>0.851852</td>\n",
       "      <td>0.026746</td>\n",
       "      <td>0.904762</td>\n",
       "      <td>0.889459</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>f1</td>\n",
       "      <td>0.910192</td>\n",
       "      <td>0.844156</td>\n",
       "      <td>0.029538</td>\n",
       "      <td>0.902778</td>\n",
       "      <td>0.885708</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>loss</td>\n",
       "      <td>0.253303</td>\n",
       "      <td>0.190586</td>\n",
       "      <td>0.026051</td>\n",
       "      <td>0.211756</td>\n",
       "      <td>0.218549</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>precision</td>\n",
       "      <td>0.930233</td>\n",
       "      <td>0.897436</td>\n",
       "      <td>0.014552</td>\n",
       "      <td>0.925926</td>\n",
       "      <td>0.917865</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>recall</td>\n",
       "      <td>0.911765</td>\n",
       "      <td>0.851852</td>\n",
       "      <td>0.026746</td>\n",
       "      <td>0.904762</td>\n",
       "      <td>0.889459</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>roc_auc</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.992647</td>\n",
       "      <td>0.003009</td>\n",
       "      <td>0.995885</td>\n",
       "      <td>0.996177</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>accuracy</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>0.046010</td>\n",
       "      <td>0.960784</td>\n",
       "      <td>0.949891</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>f1</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.885714</td>\n",
       "      <td>0.047405</td>\n",
       "      <td>0.960648</td>\n",
       "      <td>0.948787</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>loss</td>\n",
       "      <td>0.205332</td>\n",
       "      <td>0.100677</td>\n",
       "      <td>0.049247</td>\n",
       "      <td>0.101051</td>\n",
       "      <td>0.135687</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>precision</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.916667</td>\n",
       "      <td>0.034162</td>\n",
       "      <td>0.964912</td>\n",
       "      <td>0.960526</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>recall</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>0.046010</td>\n",
       "      <td>0.960784</td>\n",
       "      <td>0.949891</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>roc_auc</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.995885</td>\n",
       "      <td>0.001772</td>\n",
       "      <td>0.999135</td>\n",
       "      <td>0.998340</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>accuracy</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>0.045387</td>\n",
       "      <td>0.941176</td>\n",
       "      <td>0.943355</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>f1</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.885714</td>\n",
       "      <td>0.046668</td>\n",
       "      <td>0.940715</td>\n",
       "      <td>0.942143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>loss</td>\n",
       "      <td>0.301731</td>\n",
       "      <td>0.090078</td>\n",
       "      <td>0.090255</td>\n",
       "      <td>0.140597</td>\n",
       "      <td>0.177469</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>precision</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.916667</td>\n",
       "      <td>0.034247</td>\n",
       "      <td>0.950000</td>\n",
       "      <td>0.955556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>recall</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>0.045387</td>\n",
       "      <td>0.941176</td>\n",
       "      <td>0.943355</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>roc_auc</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.998414</td>\n",
       "      <td>0.000748</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.999471</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>accuracy</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>0.047005</td>\n",
       "      <td>0.970588</td>\n",
       "      <td>0.953159</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>f1</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.885714</td>\n",
       "      <td>0.048446</td>\n",
       "      <td>0.970531</td>\n",
       "      <td>0.952082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>loss</td>\n",
       "      <td>0.158564</td>\n",
       "      <td>0.059430</td>\n",
       "      <td>0.041023</td>\n",
       "      <td>0.094776</td>\n",
       "      <td>0.104256</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>precision</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.916667</td>\n",
       "      <td>0.034714</td>\n",
       "      <td>0.972973</td>\n",
       "      <td>0.963213</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>recall</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>0.047005</td>\n",
       "      <td>0.970588</td>\n",
       "      <td>0.953159</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>roc_auc</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.999135</td>\n",
       "      <td>0.000408</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.999712</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    hyperparamcombo_id  job_id  predictor_id     metric   maximum   minimum  \\\n",
       "0                    1       1             1   accuracy  1.000000  0.962963   \n",
       "1                    1       1             1         f1  1.000000  0.962848   \n",
       "2                    1       1             1       loss  0.179581  0.131908   \n",
       "3                    1       1             1  precision  1.000000  0.966667   \n",
       "4                    1       1             1     recall  1.000000  0.962963   \n",
       "5                    1       1             1    roc_auc  1.000000  0.987654   \n",
       "6                    2       2             2   accuracy  1.000000  0.888889   \n",
       "7                    2       2             2         f1  1.000000  0.885714   \n",
       "8                    2       2             2       loss  0.186216  0.080222   \n",
       "9                    2       2             2  precision  1.000000  0.916667   \n",
       "10                   2       2             2     recall  1.000000  0.888889   \n",
       "11                   2       2             2    roc_auc  1.000000  0.998558   \n",
       "12                   3       3             3   accuracy  0.941176  0.904762   \n",
       "13                   3       3             3         f1  0.940715  0.902778   \n",
       "14                   3       3             3       loss  0.244709  0.152959   \n",
       "15                   3       3             3  precision  0.950000  0.925926   \n",
       "16                   3       3             3     recall  0.941176  0.904762   \n",
       "17                   3       3             3    roc_auc  1.000000  0.981481   \n",
       "18                   4       4             4   accuracy  1.000000  0.888889   \n",
       "19                   4       4             4         f1  1.000000  0.885714   \n",
       "20                   4       4             4       loss  0.113647  0.037085   \n",
       "21                   4       4             4  precision  1.000000  0.916667   \n",
       "22                   4       4             4     recall  1.000000  0.888889   \n",
       "23                   4       4             4    roc_auc  1.000000  0.998847   \n",
       "24                   5       5             5   accuracy  0.911765  0.851852   \n",
       "25                   5       5             5         f1  0.910192  0.844156   \n",
       "26                   5       5             5       loss  0.253303  0.190586   \n",
       "27                   5       5             5  precision  0.930233  0.897436   \n",
       "28                   5       5             5     recall  0.911765  0.851852   \n",
       "29                   5       5             5    roc_auc  1.000000  0.992647   \n",
       "30                   6       6             6   accuracy  1.000000  0.888889   \n",
       "31                   6       6             6         f1  1.000000  0.885714   \n",
       "32                   6       6             6       loss  0.205332  0.100677   \n",
       "33                   6       6             6  precision  1.000000  0.916667   \n",
       "34                   6       6             6     recall  1.000000  0.888889   \n",
       "35                   6       6             6    roc_auc  1.000000  0.995885   \n",
       "36                   7       7             7   accuracy  1.000000  0.888889   \n",
       "37                   7       7             7         f1  1.000000  0.885714   \n",
       "38                   7       7             7       loss  0.301731  0.090078   \n",
       "39                   7       7             7  precision  1.000000  0.916667   \n",
       "40                   7       7             7     recall  1.000000  0.888889   \n",
       "41                   7       7             7    roc_auc  1.000000  0.998414   \n",
       "42                   8       8             8   accuracy  1.000000  0.888889   \n",
       "43                   8       8             8         f1  1.000000  0.885714   \n",
       "44                   8       8             8       loss  0.158564  0.059430   \n",
       "45                   8       8             8  precision  1.000000  0.916667   \n",
       "46                   8       8             8     recall  1.000000  0.888889   \n",
       "47                   8       8             8    roc_auc  1.000000  0.999135   \n",
       "\n",
       "      pstdev    median      mean  \n",
       "0   0.015969  0.970588  0.977850  \n",
       "1   0.016013  0.970531  0.977793  \n",
       "2   0.019577  0.151245  0.154245  \n",
       "3   0.014458  0.972973  0.979880  \n",
       "4   0.015969  0.970588  0.977850  \n",
       "5   0.005512  0.998558  0.995404  \n",
       "6   0.045465  0.950980  0.946623  \n",
       "7   0.046804  0.950714  0.945476  \n",
       "8   0.044172  0.114393  0.126944  \n",
       "9   0.034024  0.957265  0.957977  \n",
       "10  0.045465  0.950980  0.946623  \n",
       "11  0.000680  1.000000  0.999519  \n",
       "12  0.014931  0.925926  0.923955  \n",
       "13  0.015564  0.925000  0.922831  \n",
       "14  0.038960  0.176098  0.191255  \n",
       "15  0.009851  0.939394  0.938440  \n",
       "16  0.014931  0.925926  0.923955  \n",
       "17  0.008471  0.998847  0.993443  \n",
       "18  0.048423  0.980392  0.956427  \n",
       "19  0.049897  0.980375  0.955363  \n",
       "20  0.031256  0.075605  0.075446  \n",
       "21  0.035728  0.981481  0.966049  \n",
       "22  0.048423  0.980392  0.956427  \n",
       "23  0.000544  1.000000  0.999616  \n",
       "24  0.026746  0.904762  0.889459  \n",
       "25  0.029538  0.902778  0.885708  \n",
       "26  0.026051  0.211756  0.218549  \n",
       "27  0.014552  0.925926  0.917865  \n",
       "28  0.026746  0.904762  0.889459  \n",
       "29  0.003009  0.995885  0.996177  \n",
       "30  0.046010  0.960784  0.949891  \n",
       "31  0.047405  0.960648  0.948787  \n",
       "32  0.049247  0.101051  0.135687  \n",
       "33  0.034162  0.964912  0.960526  \n",
       "34  0.046010  0.960784  0.949891  \n",
       "35  0.001772  0.999135  0.998340  \n",
       "36  0.045387  0.941176  0.943355  \n",
       "37  0.046668  0.940715  0.942143  \n",
       "38  0.090255  0.140597  0.177469  \n",
       "39  0.034247  0.950000  0.955556  \n",
       "40  0.045387  0.941176  0.943355  \n",
       "41  0.000748  1.000000  0.999471  \n",
       "42  0.047005  0.970588  0.953159  \n",
       "43  0.048446  0.970531  0.952082  \n",
       "44  0.041023  0.094776  0.104256  \n",
       "45  0.034714  0.972973  0.963213  \n",
       "46  0.047005  0.970588  0.953159  \n",
       "47  0.000408  1.000000  0.999712  "
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "queue_multiclass.metrics_aggregate_to_pandas(\n",
    "    ascending=False\n",
    "    , selected_metrics=None\n",
    "    , selected_stats=None\n",
    "    , sort_by=None\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Queue Visualization"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "`plot_performance` aka the \"boomerang chart\" is unique to AIQC, and it really brings the benefits of the library to light. Each model from the Queue is evaluated against all splits/ folds."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "When performing classification, the secondary training metric (non-loss) is 'accuracy'."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "queue_multiclass.plot_performance(\n",
    "    max_loss = 1.5, min_accuracy = 0.70\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![Classify Boomerang](../images/plot_classify_boomerang.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Individual Job Visualization"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Loss values in the first few epochs can often be extremely high before they plummet and become more gradual. This really stretches out the graph and makes it hard to see if the evaluation set is diverging or not. The `loss_skip_15pct:bool` parameter skips displaying the first 15% of epochs so that figure is more useful."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "queue_multiclass.jobs[0].predictors[0].plot_learning_curve(loss_skip_15pct=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![Classify Learn](../images/plot_classify_learn.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "These classification metrics are preformatted for plotting."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['confusion_matrix', 'roc_curve', 'precision_recall_curve'])"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "queue_multiclass.jobs[0].predictors[0].predictions[0].plot_data['test'].keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "queue_multiclass.jobs[0].predictors[0].predictions[0].plot_roc_curve()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![Classify ROC](../images/plot_roc.png)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "queue_multiclass.jobs[0].predictors[0].predictions[0].plot_confusion_matrix()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![Plot Confusion](../images/plot_confusion_matrix.png)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "queue_multiclass.jobs[0].predictors[0].predictions[0].plot_precision_recall()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![Precision Recall](../images/plot_precision_recall.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "%%capture\n",
    "queue_regression = tests.make_test_queue('keras_regression')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "ðŸ”® Training Models ðŸ”®: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 4/4 [00:32<00:00,  8.03s/it]\n"
     ]
    }
   ],
   "source": [
    "queue_regression.run_jobs()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Individual Job Metrics"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Each training `Prediction` contains the following metrics."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'test': {'explained_variance': 0.7894243409529155,\n",
      "          'loss': 0.3433103561401367,\n",
      "          'mse': 0.21202397973530798,\n",
      "          'r2': 0.7865474072073684},\n",
      " 'train': {'explained_variance': 0.7772334144881416,\n",
      "           'loss': 0.3257257640361786,\n",
      "           'mse': 0.22540750832130774,\n",
      "           'r2': 0.7745924916786923},\n",
      " 'validation': {'explained_variance': 0.70325979950094,\n",
      "                'loss': 0.40005412697792053,\n",
      "                'mse': 0.38639962177247694,\n",
      "                'r2': 0.6802937337531519}}\n"
     ]
    }
   ],
   "source": [
    "p(queue_regression.jobs[0].predictors[0].predictions[0].metrics)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It also contains per-epoch metrics calculated during model training."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['loss', 'mean_squared_error', 'val_loss', 'val_mean_squared_error'])"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "queue_regression.jobs[0].predictors[0].history.keys()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Aggregate Queue Metrics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hyperparamcombo_id</th>\n",
       "      <th>job_id</th>\n",
       "      <th>predictor_id</th>\n",
       "      <th>split</th>\n",
       "      <th>explained_variance</th>\n",
       "      <th>loss</th>\n",
       "      <th>mse</th>\n",
       "      <th>r2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>test</td>\n",
       "      <td>0.809494</td>\n",
       "      <td>0.423333</td>\n",
       "      <td>0.289514</td>\n",
       "      <td>0.708535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>validation</td>\n",
       "      <td>0.722865</td>\n",
       "      <td>0.480268</td>\n",
       "      <td>0.521585</td>\n",
       "      <td>0.568441</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>train</td>\n",
       "      <td>0.795168</td>\n",
       "      <td>0.396511</td>\n",
       "      <td>0.321744</td>\n",
       "      <td>0.678256</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>test</td>\n",
       "      <td>0.779358</td>\n",
       "      <td>0.410134</td>\n",
       "      <td>0.274249</td>\n",
       "      <td>0.723904</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>validation</td>\n",
       "      <td>0.717331</td>\n",
       "      <td>0.432595</td>\n",
       "      <td>0.442124</td>\n",
       "      <td>0.634188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>train</td>\n",
       "      <td>0.753201</td>\n",
       "      <td>0.379794</td>\n",
       "      <td>0.297251</td>\n",
       "      <td>0.702749</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>test</td>\n",
       "      <td>0.805824</td>\n",
       "      <td>0.353231</td>\n",
       "      <td>0.213114</td>\n",
       "      <td>0.785450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>validation</td>\n",
       "      <td>0.733818</td>\n",
       "      <td>0.387297</td>\n",
       "      <td>0.368265</td>\n",
       "      <td>0.695298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>train</td>\n",
       "      <td>0.784331</td>\n",
       "      <td>0.332360</td>\n",
       "      <td>0.234408</td>\n",
       "      <td>0.765592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>test</td>\n",
       "      <td>0.789424</td>\n",
       "      <td>0.343310</td>\n",
       "      <td>0.212024</td>\n",
       "      <td>0.786547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>validation</td>\n",
       "      <td>0.703260</td>\n",
       "      <td>0.400054</td>\n",
       "      <td>0.386400</td>\n",
       "      <td>0.680294</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>train</td>\n",
       "      <td>0.777233</td>\n",
       "      <td>0.325726</td>\n",
       "      <td>0.225408</td>\n",
       "      <td>0.774592</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    hyperparamcombo_id  job_id  predictor_id       split  explained_variance  \\\n",
       "9                   12      12            12        test            0.809494   \n",
       "10                  12      12            12  validation            0.722865   \n",
       "11                  12      12            12       train            0.795168   \n",
       "6                   11      11            11        test            0.779358   \n",
       "7                   11      11            11  validation            0.717331   \n",
       "8                   11      11            11       train            0.753201   \n",
       "3                   10      10            10        test            0.805824   \n",
       "4                   10      10            10  validation            0.733818   \n",
       "5                   10      10            10       train            0.784331   \n",
       "0                    9       9             9        test            0.789424   \n",
       "1                    9       9             9  validation            0.703260   \n",
       "2                    9       9             9       train            0.777233   \n",
       "\n",
       "        loss       mse        r2  \n",
       "9   0.423333  0.289514  0.708535  \n",
       "10  0.480268  0.521585  0.568441  \n",
       "11  0.396511  0.321744  0.678256  \n",
       "6   0.410134  0.274249  0.723904  \n",
       "7   0.432595  0.442124  0.634188  \n",
       "8   0.379794  0.297251  0.702749  \n",
       "3   0.353231  0.213114  0.785450  \n",
       "4   0.387297  0.368265  0.695298  \n",
       "5   0.332360  0.234408  0.765592  \n",
       "0   0.343310  0.212024  0.786547  \n",
       "1   0.400054  0.386400  0.680294  \n",
       "2   0.325726  0.225408  0.774592  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "queue_regression.metrics_to_pandas()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "These are also aggregated by metric across all splits/folds."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hyperparamcombo_id</th>\n",
       "      <th>job_id</th>\n",
       "      <th>predictor_id</th>\n",
       "      <th>metric</th>\n",
       "      <th>maximum</th>\n",
       "      <th>minimum</th>\n",
       "      <th>pstdev</th>\n",
       "      <th>median</th>\n",
       "      <th>mean</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>explained_variance</td>\n",
       "      <td>0.789424</td>\n",
       "      <td>0.703260</td>\n",
       "      <td>0.038072</td>\n",
       "      <td>0.777233</td>\n",
       "      <td>0.756639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>loss</td>\n",
       "      <td>0.400054</td>\n",
       "      <td>0.325726</td>\n",
       "      <td>0.031717</td>\n",
       "      <td>0.343310</td>\n",
       "      <td>0.356363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>mse</td>\n",
       "      <td>0.386400</td>\n",
       "      <td>0.212024</td>\n",
       "      <td>0.079236</td>\n",
       "      <td>0.225408</td>\n",
       "      <td>0.274610</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>r2</td>\n",
       "      <td>0.786547</td>\n",
       "      <td>0.680294</td>\n",
       "      <td>0.047522</td>\n",
       "      <td>0.774592</td>\n",
       "      <td>0.747145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>explained_variance</td>\n",
       "      <td>0.805824</td>\n",
       "      <td>0.733818</td>\n",
       "      <td>0.030182</td>\n",
       "      <td>0.784331</td>\n",
       "      <td>0.774658</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>loss</td>\n",
       "      <td>0.387297</td>\n",
       "      <td>0.332360</td>\n",
       "      <td>0.022643</td>\n",
       "      <td>0.353231</td>\n",
       "      <td>0.357629</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>mse</td>\n",
       "      <td>0.368265</td>\n",
       "      <td>0.213114</td>\n",
       "      <td>0.068672</td>\n",
       "      <td>0.234408</td>\n",
       "      <td>0.271929</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>r2</td>\n",
       "      <td>0.785450</td>\n",
       "      <td>0.695298</td>\n",
       "      <td>0.038677</td>\n",
       "      <td>0.765592</td>\n",
       "      <td>0.748780</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>explained_variance</td>\n",
       "      <td>0.779358</td>\n",
       "      <td>0.717331</td>\n",
       "      <td>0.025426</td>\n",
       "      <td>0.753201</td>\n",
       "      <td>0.749963</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>loss</td>\n",
       "      <td>0.432595</td>\n",
       "      <td>0.379794</td>\n",
       "      <td>0.021636</td>\n",
       "      <td>0.410134</td>\n",
       "      <td>0.407508</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>mse</td>\n",
       "      <td>0.442124</td>\n",
       "      <td>0.274249</td>\n",
       "      <td>0.074311</td>\n",
       "      <td>0.297251</td>\n",
       "      <td>0.337875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>r2</td>\n",
       "      <td>0.723904</td>\n",
       "      <td>0.634188</td>\n",
       "      <td>0.038293</td>\n",
       "      <td>0.702749</td>\n",
       "      <td>0.686947</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>explained_variance</td>\n",
       "      <td>0.809494</td>\n",
       "      <td>0.722865</td>\n",
       "      <td>0.037914</td>\n",
       "      <td>0.795168</td>\n",
       "      <td>0.775842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>loss</td>\n",
       "      <td>0.480268</td>\n",
       "      <td>0.396511</td>\n",
       "      <td>0.034923</td>\n",
       "      <td>0.423333</td>\n",
       "      <td>0.433371</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>mse</td>\n",
       "      <td>0.521585</td>\n",
       "      <td>0.289514</td>\n",
       "      <td>0.102650</td>\n",
       "      <td>0.321744</td>\n",
       "      <td>0.377614</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>r2</td>\n",
       "      <td>0.708535</td>\n",
       "      <td>0.568441</td>\n",
       "      <td>0.060187</td>\n",
       "      <td>0.678256</td>\n",
       "      <td>0.651744</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    hyperparamcombo_id  job_id  predictor_id              metric   maximum  \\\n",
       "0                    9       9             9  explained_variance  0.789424   \n",
       "1                    9       9             9                loss  0.400054   \n",
       "2                    9       9             9                 mse  0.386400   \n",
       "3                    9       9             9                  r2  0.786547   \n",
       "4                   10      10            10  explained_variance  0.805824   \n",
       "5                   10      10            10                loss  0.387297   \n",
       "6                   10      10            10                 mse  0.368265   \n",
       "7                   10      10            10                  r2  0.785450   \n",
       "8                   11      11            11  explained_variance  0.779358   \n",
       "9                   11      11            11                loss  0.432595   \n",
       "10                  11      11            11                 mse  0.442124   \n",
       "11                  11      11            11                  r2  0.723904   \n",
       "12                  12      12            12  explained_variance  0.809494   \n",
       "13                  12      12            12                loss  0.480268   \n",
       "14                  12      12            12                 mse  0.521585   \n",
       "15                  12      12            12                  r2  0.708535   \n",
       "\n",
       "     minimum    pstdev    median      mean  \n",
       "0   0.703260  0.038072  0.777233  0.756639  \n",
       "1   0.325726  0.031717  0.343310  0.356363  \n",
       "2   0.212024  0.079236  0.225408  0.274610  \n",
       "3   0.680294  0.047522  0.774592  0.747145  \n",
       "4   0.733818  0.030182  0.784331  0.774658  \n",
       "5   0.332360  0.022643  0.353231  0.357629  \n",
       "6   0.213114  0.068672  0.234408  0.271929  \n",
       "7   0.695298  0.038677  0.765592  0.748780  \n",
       "8   0.717331  0.025426  0.753201  0.749963  \n",
       "9   0.379794  0.021636  0.410134  0.407508  \n",
       "10  0.274249  0.074311  0.297251  0.337875  \n",
       "11  0.634188  0.038293  0.702749  0.686947  \n",
       "12  0.722865  0.037914  0.795168  0.775842  \n",
       "13  0.396511  0.034923  0.423333  0.433371  \n",
       "14  0.289514  0.102650  0.321744  0.377614  \n",
       "15  0.568441  0.060187  0.678256  0.651744  "
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "queue_regression.metrics_aggregate_to_pandas()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Aggregate Queue Visualization"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "When performing regression, the secondary training metric (non-loss) is 'r2'."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "queue_regression.plot_performance(\n",
    "    max_loss=1.5, min_r2=0.65\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![Regression Boomerang](../images/plot_regression_boomerang.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Individual Job Visualization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "queue_regression.jobs[0].predictors[0].plot_learning_curve(loss_skip_15pct=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![Regression Learn](../images/plot_regression_learn.png)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
